import 'dart:convert';

import 'package:super_editor/super_editor.dart';
import 'package:super_editor_json/parser/document_parser.dart';
import 'package:super_editor_json/parser/json/document_json_parser.dart';

extension DocumentJson on Document {
  ///文档转为Json
  ///Document to Json
  String? toJson({
    ///自定义节点序列化解析器
    ///Custom node serialization parser
    List<AbsDocumentSerialize> customNodeSerializeParser = const [],

    ///自定义节点属性序列化构建器 ，查看示例程序的 ColorAttribution。
    ///Custom node attribution serialization builder，Check out the ColorAttribution for the sample program.
    AttributionSerializeBuilder? attributionSerializeBuilder,
  }) {
    var dynamicJson = documentSerialize(
      this,
      customNodeSerializeParser: customNodeSerializeParser,
      customAttributionSerializeBuilder: attributionSerializeBuilder,
    );
    return jsonEncode(dynamicJson);
  }

  ///json 转换为文档
  ///Convert JSON to Document
  static Document fromJson(
    ///json 数据，首先你的 json 数据必须是[toJson]生成的。
    ///json data, first of all, your json data must be generated by [toJson].
    String json, {
    ///自定义节点序列化解析器
    ///Custom node serialization parser
    List<AbsDocumentSerialize> customNodeSerializeParser = const [],

    ///自定义节点属性反序列化构建器，查看示例程序的 ColorAttribution。
    ///Custom node attribution deserialization builder, see ColorAttribution for the sample program.
    AttributionDeserializeBuilder? attributionDeserializeBuilder,
  }) {
    return documentDeserialize(
      jsonDecode(json),
      customNodeSerializeParser: customNodeSerializeParser,
      customAttributionDeserializeBuilder: attributionDeserializeBuilder,
    );
  }
}

extension DocumentNodeJson on DocumentNode {

  ///将节点转换为 Json 数据
  ///Convert nodes to JSON data
  String? toJson({
    List<AbsDocumentSerialize> customNodeSerializeParser = const [],
    AttributionSerializeBuilder? customAttributionSerializeBuilder,
  }) {
    var dynamicJson = documentNodeSerialize(
      this,
      customNodeSerializeParser: customNodeSerializeParser,
      customAttributionSerializeBuilder: customAttributionSerializeBuilder,
    );
    return jsonEncode(dynamicJson);
  }

  ///将 json 转换为节点
  ///Convert JSON to node
  static DocumentNode fromJson(
    ///json 数据，数据必须是由扩展类[DocumentNodeJson]的[toJson]方法生成。
    ///json data,The data must be generated by the [toJson] method of the extension class [DocumentNodeJson].
    String json, {
    List<AbsDocumentSerialize> customNodeSerializeParser = const [],
    AttributionDeserializeBuilder? customAttributionDeserializeBuilder,
  }) {
    return documentNodeDeserialize(
      jsonDecode(json),
      customNodeSerializeParser: customNodeSerializeParser,
      customAttributionDeserializeBuilder: customAttributionDeserializeBuilder,
    );
  }
}
